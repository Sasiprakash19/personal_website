body{
    text-align: center; 
    font-family: montserrat , sans-serif;
}
h1{
    margin:25px auto;
    font-family: Sacramento;
    font-size: 4rem;  
    color: #66BFBF;
    padding: 15px;
    /* 
    width: 300px;       if width applied text-align:center won't work
    margin:auto;        so we use margin auto to make it center
    font-size: 200%;  for dynamic sized font -> % or em (1em = 16px = 100%) 
    rem(Root em)(recommended) - doesn't get affected by parent font size 
    */
}
h2{
    font-size: 2.5rem;    
    color: #66BFBF;
    font-weight: normal;
    margin: 0;
}
h3{
    color: #11999E;
    font-weight: 500;
}
p{
    line-height: 1.5;
}
a{
    color: #11999E;
}
hr{
    border-style: none;
    border-top-style: dotted;
    color: #8ad6d9;
    width:5%;
    border-width: 8px;
    margin: 20px auto;
}
/* top container */
.top-container{
    margin: 0;
    background-color: #EAF6F6;
    padding-bottom: 25px;
}
.profile{
    width:55%;
    margin:auto;
    padding:2%;
}
.profile-img{
    height: 170px;
    float: left;
}
.profilePara{
    width: 60%;
    margin:auto ;
    font-size: 1.2rem;
    font-weight: 400;
}
/* middle container */
.middle-container{
    margin: 30px 0;
}
.skills{
    padding: 30px 0;
}
.skills-heading{
    font-weight: 500;
}
.skill-row1{
    width: 45%;
    text-align: left;
    margin: auto;
    padding: 25px;
    float: left;
}
.skill-row2{
    width: 45%;
    margin: auto;
    text-align: left;
    padding: 25px;
    float: left;
}
.webImage{
    width: 25%;
    float: left;
    margin-right: 30px;
}
.javaImage{
    width: 25%;
    float: left;
    margin-right: 30px;
}
/* bottom container */
.bottom-container{
    background-color: #EAF6F6;
    padding: 30px 0 10px 0;
}
.btn{
    background-color: #66BFBF;
    padding: 10px;
    border-radius: 50px;
    color: #EAF6F6;
    text-decoration: none;
}
.btn:hover{
    background-color: #11999E;
}
.footer-link{
    text-decoration: none;
    color: #11999E;
    margin: 10px;
    font-weight: 500;
}
a:hover{
    color:#105b5b;
}
.contact-me{
    padding: 20px;
}
.footer-div{
    margin:10px;
}
/* clearing float */
.clr{
    clear: left;
}
/* media query */
@media(max-width:1100px){
    .skill-row1,.skill-row2{
        float:none;
        width:80%;
    }
    .webImage,.javaImage{
        width:15%;
    }
    .profile-img{
        float:none;
    }
}
@media(max-width:700px){
    .webImage,.javaImage{
        width:30%;
    }
    .profilePara{
        width:80%;
    }
    h1{
        font-size: 3rem;
    }
}


/* 
DISPLAY:
->Block elements(takes full width)- p , h1-h6 , div , list , form
->inline elements(takes required space) - img , span , a
->block{
    width: 200px;        width & height won't work for inline- so we use inline-block
    display: inline-block;      block to inline-block element
}
->inline{        
    display: block;      inline to block element
    width: 200px;    width works as it acts block element
}
->display: none;      it removes the element
->visibility: hidden;      it only hides the element but occupies space

IMPORTANT POINTS:
-> content is everything
-> children sit on parent

POSITION:
->static , relative , absolute , fixed , inherit(inherits property from parent)
->Four coordinates - top , left , right , bottom

->default position is static & to use coordinates , position must be relative or absolute

->position: relative;     it won't affect position of other elements  

->position: absolute;    it will affect other element position           
->position: absolute;     respect to its relative parent element(body if no relative parent)
->bottom: 100px;     means 100px bottom margin from its parent div

->position: fixed;   fixed with respect to body
*/
